from dotenv import load_dotenv # –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Ç–æ–∫–µ–Ω–∞
from aiogram.types import Message
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
import os # –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env —Ñ–∞–π–ª–∞
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup # –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
from aiogram.types import Poll, PollOption # –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ä–æ—Å–Ω–∏–∫–∞


load_dotenv()
bot = Bot(os.getenv('TOKEN'))
dp = Dispatcher(bot)


async def on_startup(_):
    print('–ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')

@dp.message_handler(commands=['start'])
async def help_command(message: types.Message):
    await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç!",
                         reply_markup=kb)
    await message.delete()



HELP_COMMAND = '''
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/location - –ª–æ–∫–∞—Ü–∏—è
/picture - –∫–∞—Ä—Ç–∏–Ω–∫–∞
/vote - –æ—Ü–µ–Ω–∫–∞
/pool - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ 
'''

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND,
                        reply_markup=kb)


DISCRIPTION = '–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–æ—Ñ–ª–∞ –π–æ—É'

@dp.message_handler(commands=['description'])
async def help_command(message: types.Message):
    await message.answer(text=DISCRIPTION,
                        reply_markup=kb)


@dp.message_handler(commands=['picture'])
async def send_img(message: types.Message):
    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://static.kinoafisha.info/k/news/610/upload/news/518836787230.jpg')
    await message.delete()

@dp.message_handler(commands=['location'])
async def set_point(message: types.Message):
    await bot.send_location(chat_id=message.from_user.id,
                            latitude=55,
                            longitude=74)
    await message.delete()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞

kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add('–ü–æ–º–æ—â—å').add('–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞').add('–°–∫–∏–Ω—å –º–Ω–µ –î–∂–∏–º–º–∏').add('–±–ª—è, –≥–¥–µ —è?')



# –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞


@dp.message_handler(text='–±–ª—è, –≥–¥–µ —è?')
async def set_point(message: types.Message):
    await bot.send_location(chat_id=message.from_user.id,
                            latitude=55,
                            longitude=74)
    await message.delete()

@dp.message_handler(text='–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞')
async def help_command(message: types.Message):
    await message.answer(text=DISCRIPTION,
                        reply_markup=kb)

@dp.message_handler(text='–°–∫–∏–Ω—å –º–Ω–µ –î–∂–∏–º–º–∏')
async def send_img(message: types.Message):
    await bot.send_photo(chat_id=message.from_user.id,
                         photo='https://static.kinoafisha.info/k/news/610/upload/news/518836787230.jpg')
    await message.delete()

@dp.message_handler(text='–ü–æ–º–æ—â—å')
async def help_command(message: types.Message):
    await message.answer(text=HELP_COMMAND,
                        reply_markup=kb)



# @dp.message_handler(commands=['id'])
# async def id(message: types.Message): # –£–∑–Ω–∞—Ç—å id —é–∑–µ—Ä–∞
#     await message.answer(f'{message.from_user.id}')

# @dp.message_handler(content_types=['document', 'photo'])
# async def forward_message(message: types.Message):       # - –∫–æ–º–∞–Ω–¥–∞ —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —á—Ç–æ —Ç–æ –≤ –≥—Ä—É–ø–ø—ã
#     await bot.forward_message(os.getenv('GROUP_ID'), message.from_user.id, message.message_id)


# @dp.message_handler(content_types=['sticker'])
# async def check_sticket(message: types.Message):
    # await message.answer(message.sticker.file_id) - –∫–æ–º–∞–Ω–¥–∞ —á—Ç–æ–± —É–∑–Ω–∞—Ç—å id —Å—Ç–∏–∫–µ—Ä–∞
    # await bot.send_message(message.from_user.id, message.chat.id) - –∫–æ–º–∞–Ω–¥–∞ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å id –≥—Ä—É–ø–ø—ã


# –ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞


ikb = InlineKeyboardMarkup(row_width=2)

ib1 = InlineKeyboardButton(text='Button-1',
                            url='https://github.com/goodwebman')

ib2 = InlineKeyboardButton(text='Button-2',
                            url='https://github.com/goodwebman')

ikb.add(ib1, ib2)

@dp.message_handler(commands=['keyboard'])
async def help_command(message: types.Message):
    await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç!",
                         reply_markup=ikb)
    await message.delete()


@dp.message_handler(commands=['vote']) # handler example
async def vote_command(message: types.Message):
    ikb = InlineKeyboardMarkup(row_width=2)
    ib1 = InlineKeyboardButton(text='‚ù§Ô∏è',
                               callback_data="like")
    ib2 = InlineKeyboardButton(text='üëé',
                               callback_data="dislike")
    ikb.add(ib1, ib2)

    await bot.send_photo(chat_id=message.from_user.id,
                         photo="https://cdn.mos.cms.futurecdn.net/xs77NtybWu6MPkoRtYApuJ-320-80.jpg",
                         caption='–ù—Ä–∞–≤–∏—Ç—Å—è –ª–∏ —Ç–µ–±–µ –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è?',
                         reply_markup=ikb)

@dp.callback_query_handler()
async def vote_callback(callback: types.CallbackQuery):
    if callback.data == 'like':
        await callback.answer(text='–¢–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')
    await callback.answer('–¢–µ–±–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –¥–∞–Ω–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!')

# –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ

@dp.message_handler(commands=["pool"])
async def cmd_pool(message: types.Message):
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É",
                                           request_poll=types.KeyboardButtonPollType(type=types.PollType.REGULAR)))
    poll_keyboard.add(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞"))
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!", reply_markup=poll_keyboard)

# handler –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º ‚Äú–û—Ç–º–µ–Ω–∞‚Äù
@dp.message_handler(lambda message: message.text == "–û—Ç–º–µ–Ω–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í–≤–µ–¥–∏—Ç–µ /pool, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.", reply_markup=remove_keyboard)


# –§–∏–ª—å—Ç—Ä –º–∞—Ç–æ–≤

from aiogram.dispatcher.filters import Text
import re

# –°–æ–∑–¥–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–∞—Ç–æ–≤
bad_words_pattern = re.compile(r"\b(—Ö—É–π|–ø–∏–∑–¥–∞|–µ–±–∞—Ç—å|–±–ª—è—Ç—å)\b", re.IGNORECASE)
# –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –º–∞—Ç–æ–≤
async def bad_words_filter(message: types.Message):
    if bad_words_pattern.search(message.text):
        # –ï—Å–ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å –º–∞—Ç, —Ç–æ –æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–≥–æ
        return True
    else:
        # –ò–Ω–∞—á–µ, –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        return False
# –î–µ–∫–æ—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–º –º–∞—Ç–æ–≤
@dp.message_handler(Text, bad_words_filter)
async def handle_message(message: types.Message):
    await message.answer("–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—É—é –ª–µ–∫—Å–∏–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–µ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º.")
    await message.delete()



if __name__ == "__main__":
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True)